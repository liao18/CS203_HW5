#BlueJ class context
comment0.params=
comment0.target=void\ initNames()
comment0.text=\r\n\ initNames\r\n\ this\ method\ initializes\ the\ card\ names\r\n
comment1.params=
comment1.target=void\ shuffle()
comment1.text=\r\n\ shuffle\r\n\r\n\ this\ method\ "shuffles"\ the\ deck\ by\ setting\ each\ entry\ in\ the\ dealt\ array\r\n\ to\ 'false'\r\n
comment2.params=
comment2.target=void\ initValues()
comment2.text=\r\n\ initValues\r\n\ \r\n\ This\ method\ initializes\ the\ entries\ in\ the\ cardValues\ array.\ \ A\ value\ of\r\n\ '11'\ is\ assigned\ for\ the\ aces.\ \ The\ getHandValue()\ method\ may\ later\ treat\r\n\ this\ as\ a\ '1'\ to\ prevent\ the\ player\ from\ exceeding\ 21.\r\n
comment3.params=
comment3.target=int\ cardsDealt()
comment3.text=\r\n\ cardsDealt\r\n\r\n\ This\ method\ returns\ the\ total\ number\ of\ cards\ in\ the\ deck\ that\ have\ been\r\n\ dealt\ so\ far\r\n
comment4.params=
comment4.target=int\ drawCard()
comment4.text=\r\n\ drawCard\r\n\ \r\n\ draws\ a\ card\ from\ the\ deck.\ \ It\ selects\ randomly\ from\ cards\ that\ have\ not\r\n\ been\ dealt\ yet.\ \ The\ selcted\ card\ is\ marked\ as\ 'dealt'\ and\ its\ index\ is\r\n\ returned\ to\ the\ caller.\r\n
comment5.params=hand
comment5.target=int\ getHandValue(int[])
comment5.text=\r\n\ getHandValue\r\n\r\n\ calculates\ the\ value\ of\ a\ player's\ current\ hand.\ \ If\ the\ hand\ contains\r\n\ any\ aces,\ the\ total\ calculated\ by\ this\ method\ may\ be\ adjusted\ to\ treat\r\n\ the\ ace\ as\ having\ a\ value\ of\ 1\ instead\ of\ 11.\ \ This\ should\ be\ done\ only\r\n\ if\ necessary\ and\ only\ the\ minimum\ necessary\ number\ of\ aces\ should\ get\r\n\ this\ treatment.\r\n\ \r\n\ Under\ no\ circumstances\ should\ the\ cardValues\ array\ be\ altered\ by\ this\ method.\r\n\r\n\ @param\ hand\ \ \ \ \ \ an\ array\ of\ indexes\ indicating\ which\ cards\ are\ in\ the\ hand\r\n\r\n\ @return\ the\ hand's\ value\r\n
comment6.params=playersHand\ dealersHand
comment6.target=void\ announceWinner(int[],\ int[])
comment6.text=\r\n\ announceWinner\r\n\r\n\ given\ arrays\ representing\ the\ player's\ hand\ and\ the\ dealer's\ hand,\ this\r\n\ method\ announces\ the\ outcome\ to\ the\ player\ by\ printing\ a\ message\ to\ the\r\n\ console.\ \ The\ following\ outcomes\ are\ possible\:\ player\ busts,\ dealer\r\n\ busts,\ dealer\ wins,\ player\ wins\ and\ a\ push\ (tie).\r\n\r\n\ @param\ playersHand\ \ \ \ an\ array\ of\ indexes\ indicating\ which\ cards\ are\ in\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ player's\ hand\r\n\ @param\ dealersHand\ \ \ \ an\ array\ of\ indexes\ indicating\ which\ cards\ are\ in\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ dealer's\ hand\r\n
comment7.params=
comment7.target=void\ mainLoop()
comment7.text=\r\n\ mainLoop\r\n\r\n\ this\ method\ contains\ the\ main\ loop\ that\ plays\ Blackjack\ with\ the\ player\r\n
comment8.params=args
comment8.target=void\ main(java.lang.String[])
comment8.text=kicks\ off\ the\ game
numComments=9
